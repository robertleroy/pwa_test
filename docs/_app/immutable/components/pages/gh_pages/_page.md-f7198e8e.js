import{S as ra,i as ua,s as ka,k as l,l as r,m as i,h as u,n as k,b as aa,C as Z,L as Ea,q as C,a as d,r as x,c as h,G as s,u as Pa,x as Ra,y as $a,z as Ha,f as Ca,t as xa,A as Ia}from"../../../chunks/index-f05a2fe5.js";import{b as oa}from"../../../chunks/paths-93b45301.js";function ca(f,n,c){const t=f.slice();return t[1]=n[c],t}function la(f){let n,c,t=f[1].name+"",p,a,e;return{c(){n=l("div"),c=l("a"),p=C(t),e=d(),this.h()},l(g){n=r(g,"DIV",{class:!0});var m=i(n);c=r(m,"A",{href:!0});var y=i(c);p=x(y,t),y.forEach(u),e=h(m),m.forEach(u),this.h()},h(){k(c,"href",a=""+(oa+f[1].path)),k(n,"class","link")},m(g,m){aa(g,n,m),s(n,c),s(c,p),s(n,e)},p(g,m){m&1&&t!==(t=g[1].name+"")&&Pa(p,t),m&1&&a!==(a=""+(oa+g[1].path))&&k(c,"href",a)},d(g){g&&u(n)}}}function La(f){let n,c=f[0],t=[];for(let p=0;p<c.length;p+=1)t[p]=la(ca(f,c,p));return{c(){n=l("div");for(let p=0;p<t.length;p+=1)t[p].c();this.h()},l(p){n=r(p,"DIV",{class:!0});var a=i(n);for(let e=0;e<t.length;e+=1)t[e].l(a);a.forEach(u),this.h()},h(){k(n,"class","toc")},m(p,a){aa(p,n,a);for(let e=0;e<t.length;e+=1)t[e].m(n,null)},p(p,[a]){if(a&1){c=p[0];let e;for(e=0;e<c.length;e+=1){const g=ca(p,c,e);t[e]?t[e].p(g,a):(t[e]=la(g),t[e].c(),t[e].m(n,null))}for(;e<t.length;e+=1)t[e].d(1);t.length=c.length}},i:Z,o:Z,d(p){p&&u(n),Ea(t,p)}}}function Ta(f,n,c){let{links:t=[]}=n;return f.$$set=p=>{"links"in p&&c(0,t=p.links)},[t]}class Ba extends ra{constructor(n){super(),ua(this,n,Ta,La,ka,{links:0})}}function Da(f){let n,c,t,p,a,e,g,m,y,M,V,_,ia='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @sveltejs/adapter-static</code>',A,b,ga=`<code class="language-js"><span class="token comment">/* svelte.config.js */</span>
<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">"@sveltejs/adapter-static"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dev <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'dev'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">paths</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">base</span><span class="token operator">:</span> dev <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/pwa_test'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token comment">/* build to &#96;docs&#96; for gh-pages */</span>
      <span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token string">"docs"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token string">"docs"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token string">"app.html"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span>
</code>`,G,w,da=`<code class="language-js"><span class="token comment">/* adapter options defaults */</span>
<span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token comment">/* output folder */</span>
  <span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token comment">/* output folder */</span>
  <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">/* 404 fallback page */</span>
  <span class="token literal-property property">precompress</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">/* gzip files*/</span>
  <span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">/* Check if whole app is accessible */</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,S,q,I,z,$,O,F,j,ha=`<code class="language-js"><span class="token comment">// +layout.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> prerender <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></code>`,J,K,L,N,H,Q,U,E,fa=`<code class="language-js"><span class="token comment">// svelte.config.cjs</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">paths</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">base</span><span class="token operator">:</span> dev <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/pwa_test'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,W,P,ma=`<code class="language-svelte"><span class="token comment">&lt;!-- all relative paths prefaces with &#123; base &#125; --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> base <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$app/paths'</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Home'</span><span class="token punctuation">,</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'About'</span><span class="token punctuation">,</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>title<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>      
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href='</span><span class="token language-javascript"><span class="token punctuation">&#123;</span> base <span class="token punctuation">&#125;</span></span>/<span class="token attr-name">'</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src="</span><span class="token language-javascript"><span class="token punctuation">&#123;</span> base <span class="token punctuation">&#125;</span></span>/<span class="token attr-name">pwa.svg"</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>
    <span class="token each"><span class="token punctuation">&#123;</span><span class="token keyword">#each</span> <span class="token language-javascript">routes </span><span class="token keyword">as</span> <span class="token language-javascript">route<span class="token punctuation">&#125;</span></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>route<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>base<span class="token punctuation">&#125;</span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>route<span class="token punctuation">.</span>path<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>route<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token each"><span class="token punctuation">&#123;</span><span class="token keyword">/each</span><span class="token punctuation">&#125;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span></code>`,X,T,Y,B,D;return t=new Ba({props:{links:f[0]}}),{c(){n=l("div"),c=l("div"),Ra(t.$$.fragment),p=d(),a=l("div"),e=l("h1"),g=C("Github Pages"),m=d(),y=l("h2"),M=C("Install and Configure adapter-static"),V=d(),_=l("pre"),A=d(),b=l("pre"),G=d(),w=l("pre"),S=d(),q=l("br"),I=l("br"),z=d(),$=l("h2"),O=C("Pre-render pages"),F=d(),j=l("pre"),J=d(),K=l("br"),L=l("br"),N=d(),H=l("h2"),Q=C("Configure Relative Paths"),U=d(),E=l("pre"),W=d(),P=l("pre"),X=d(),T=l("br"),Y=d(),B=l("br"),this.h()},l(v){n=r(v,"DIV",{class:!0});var R=i(n);c=r(R,"DIV",{class:!0});var sa=i(c);$a(t.$$.fragment,sa),sa.forEach(u),p=h(R),a=r(R,"DIV",{class:!0});var o=i(a);e=r(o,"H1",{});var na=i(e);g=x(na,"Github Pages"),na.forEach(u),m=h(o),y=r(o,"H2",{});var ta=i(y);M=x(ta,"Install and Configure adapter-static"),ta.forEach(u),V=h(o),_=r(o,"PRE",{class:!0});var va=i(_);va.forEach(u),A=h(o),b=r(o,"PRE",{class:!0});var ya=i(b);ya.forEach(u),G=h(o),w=r(o,"PRE",{class:!0});var _a=i(w);_a.forEach(u),S=h(o),q=r(o,"BR",{}),I=r(o,"BR",{id:!0}),z=h(o),$=r(o,"H2",{});var pa=i($);O=x(pa,"Pre-render pages"),pa.forEach(u),F=h(o),j=r(o,"PRE",{class:!0});var ba=i(j);ba.forEach(u),J=h(o),K=r(o,"BR",{}),L=r(o,"BR",{id:!0}),N=h(o),H=r(o,"H2",{});var ea=i(H);Q=x(ea,"Configure Relative Paths"),ea.forEach(u),U=h(o),E=r(o,"PRE",{class:!0});var wa=i(E);wa.forEach(u),W=h(o),P=r(o,"PRE",{class:!0});var ja=i(P);ja.forEach(u),X=h(o),T=r(o,"BR",{id:!0}),Y=h(o),B=r(o,"BR",{id:!0}),o.forEach(u),R.forEach(u),this.h()},h(){k(c,"class","toc"),k(_,"class","language-bash"),k(b,"class","language-js"),k(w,"class","language-js"),k(I,"id","prerender"),k(j,"class","language-js"),k(L,"id","paths"),k(E,"class","language-js"),k(P,"class","language-svelte"),k(T,"id",""),k(B,"id",""),k(a,"class","content"),k(n,"class","page")},m(v,R){aa(v,n,R),s(n,c),Ha(t,c,null),s(n,p),s(n,a),s(a,e),s(e,g),s(a,m),s(a,y),s(y,M),s(a,V),s(a,_),_.innerHTML=ia,s(a,A),s(a,b),b.innerHTML=ga,s(a,G),s(a,w),w.innerHTML=da,s(a,S),s(a,q),s(a,I),s(a,z),s(a,$),s($,O),s(a,F),s(a,j),j.innerHTML=ha,s(a,J),s(a,K),s(a,L),s(a,N),s(a,H),s(H,Q),s(a,U),s(a,E),E.innerHTML=fa,s(a,W),s(a,P),P.innerHTML=ma,s(a,X),s(a,T),s(a,Y),s(a,B),D=!0},p:Z,i(v){D||(Ca(t.$$.fragment,v),D=!0)},o(v){xa(t.$$.fragment,v),D=!1},d(v){v&&u(n),Ia(t)}}}function Ma(f){return[[{name:"Adapter Static",path:"#top"},{name:"Pre-render Pages",path:"#prerender"},{name:"Configure Paths",path:"#paths"}]]}class Ga extends ra{constructor(n){super(),ua(this,n,Ma,Da,ka,{})}}export{Ga as default};
