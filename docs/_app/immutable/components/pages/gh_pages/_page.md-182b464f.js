import{S as as,i as ns,s as ps,k as t,q as b,a as l,l as e,m as o,r as w,h as a,c as r,n as R,b as p,G as c,C as U}from"../../../chunks/index-f05a2fe5.js";function ts(O){let i,T,g,d,G,j,u,Q='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @sveltejs/adapter-static</code>',C,k,E,q,A,P,S,x,f,V=`<code class="language-js"><span class="token comment">// svelte.config.js</span>
<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">"@sveltejs/adapter-static"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dev <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'dev'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">paths</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">base</span><span class="token operator">:</span> dev <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/pwa_test'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token string">"app.html"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span>
</code>`,L,v,z,h,m,W=`<code class="language-js">  <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// default options are shown. </span>
    <span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token comment">/* output folder */</span>
    <span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token comment">/* output folder */</span>
    <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">/* 404 fallback page */</span>
    <span class="token literal-property property">precompress</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">/* gzip files*/</span>
    <span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">/* Check if whole app is accessible */</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,I,_,D,H,y,X=`<code class="language-js"><span class="token comment">// +layout.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> prerender <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></code>`;return{c(){i=t("h1"),T=b("Github Pages"),g=l(),d=t("p"),G=b("Install adapter-static"),j=l(),u=t("pre"),C=l(),k=t("ul"),E=t("li"),q=b("Import & Config adapter"),A=l(),P=t("li"),S=b("Config base path for gh repo"),x=l(),f=t("pre"),L=l(),v=t("p"),z=b("Adapter can take options:"),h=l(),m=t("pre"),I=l(),_=t("p"),D=b("Pre-render pages"),H=l(),y=t("pre"),this.h()},l(s){i=e(s,"H1",{});var n=o(i);T=w(n,"Github Pages"),n.forEach(a),g=r(s),d=e(s,"P",{});var B=o(d);G=w(B,"Install adapter-static"),B.forEach(a),j=r(s),u=e(s,"PRE",{class:!0});var Y=o(u);Y.forEach(a),C=r(s),k=e(s,"UL",{});var M=o(k);E=e(M,"LI",{});var F=o(E);q=w(F,"Import & Config adapter"),F.forEach(a),A=r(M),P=e(M,"LI",{});var J=o(P);S=w(J,"Config base path for gh repo"),J.forEach(a),M.forEach(a),x=r(s),f=e(s,"PRE",{class:!0});var Z=o(f);Z.forEach(a),L=r(s),v=e(s,"P",{});var K=o(v);z=w(K,"Adapter can take options:"),K.forEach(a),h=r(s),m=e(s,"PRE",{class:!0});var $=o(m);$.forEach(a),I=r(s),_=e(s,"P",{});var N=o(_);D=w(N,"Pre-render pages"),N.forEach(a),H=r(s),y=e(s,"PRE",{class:!0});var ss=o(y);ss.forEach(a),this.h()},h(){R(u,"class","language-bash"),R(f,"class","language-js"),R(m,"class","language-js"),R(y,"class","language-js")},m(s,n){p(s,i,n),c(i,T),p(s,g,n),p(s,d,n),c(d,G),p(s,j,n),p(s,u,n),u.innerHTML=Q,p(s,C,n),p(s,k,n),c(k,E),c(E,q),c(k,A),c(k,P),c(P,S),p(s,x,n),p(s,f,n),f.innerHTML=V,p(s,L,n),p(s,v,n),c(v,z),p(s,h,n),p(s,m,n),m.innerHTML=W,p(s,I,n),p(s,_,n),c(_,D),p(s,H,n),p(s,y,n),y.innerHTML=X},p:U,i:U,o:U,d(s){s&&a(i),s&&a(g),s&&a(d),s&&a(j),s&&a(u),s&&a(C),s&&a(k),s&&a(x),s&&a(f),s&&a(L),s&&a(v),s&&a(h),s&&a(m),s&&a(I),s&&a(_),s&&a(H),s&&a(y)}}}class os extends as{constructor(i){super(),ns(this,i,null,ts,ps,{})}}export{os as default};
