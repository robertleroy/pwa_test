import{S as cs,i as ls,s as us,k as s,x as is,a as u,q as c,l as a,m as e,y as rs,h as p,c as i,r as l,n as v,b as ks,G as n,z as ds,C as ms,f as fs,t as hs,A as vs}from"../../../chunks/index-f05a2fe5.js";import{T as gs}from"../../../chunks/TOC-2a526c9d.js";function ys(K){let d,E,g,Q,t,x,X,Y,I,Z,nn,r,T,sn,an,S,tn,pn,q,en,on,H,cn,ln,y,un,M,rn,kn,dn,z,mn,$,fn,hn,k,j,vn,gn,O,yn,_n,P,wn,En,R,Cn,Ln,_,An,W,bn,xn,In,C,ss=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>manifest<span class="token punctuation">"</span></span> 
      <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>use-credentials<span class="token punctuation">"</span></span> 
      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%sveltekit.assets%/manifest.json<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>apple-touch-icon<span class="token punctuation">"</span></span> 
      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%sveltekit.assets%/apple-touch-icon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>`,Tn,L,as=`<code class="language-json"><span class="token comment">/* manifest.json */</span>
<span class="token punctuation">&#123;</span>
  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"svelte-test-pwa"</span><span class="token punctuation">,</span>
  <span class="token property">"short_name"</span><span class="token operator">:</span> <span class="token string">"svelte-pwa"</span><span class="token punctuation">,</span>
  <span class="token property">"start_url"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>         <span class="token comment">/* or '/repo_name/' */</span>
  <span class="token property">"scope"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>             <span class="token comment">/* or '/repo_name/' */</span>
  <span class="token property">"display"</span><span class="token operator">:</span> <span class="token string">"standalone"</span><span class="token punctuation">,</span>
  <span class="token property">"background_color"</span><span class="token operator">:</span> <span class="token string">"#fff"</span><span class="token punctuation">,</span>
  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Test for a simple pwa"</span><span class="token punctuation">,</span>
  <span class="token property">"theme_color"</span><span class="token operator">:</span> <span class="token string">"#5a0fc8"</span><span class="token punctuation">,</span>
  <span class="token property">"accent_color"</span><span class="token operator">:</span> <span class="token string">"#c8590f"</span><span class="token punctuation">,</span>
  <span class="token property">"orientation"</span><span class="token operator">:</span> <span class="token string">"portrait"</span><span class="token punctuation">,</span>
  <span class="token property">"icons"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span>
      <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"logo.svg"</span><span class="token punctuation">,</span>
      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/svg"</span><span class="token punctuation">,</span>
      <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"192x192 512x512"</span><span class="token punctuation">,</span>
      <span class="token property">"purpose"</span><span class="token operator">:</span> <span class="token string">"maskable any"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
      <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"pwa_512.svg"</span><span class="token punctuation">,</span>
      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/svg"</span><span class="token punctuation">,</span>
      <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"512x512"</span><span class="token punctuation">,</span>
      <span class="token property">"purpose"</span><span class="token operator">:</span> <span class="token string">"maskable"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
      <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"pwa_192.svg"</span><span class="token punctuation">,</span>
      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/svg"</span><span class="token punctuation">,</span>
      <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"192x192"</span><span class="token punctuation">,</span>
      <span class="token property">"purpose"</span><span class="token operator">:</span> <span class="token string">"maskable"</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`,Sn,V,qn,D,Hn,Mn,N,w,$n,U,jn,On,Pn,A,ts=`<code class="language-js"><span class="token comment">/* src/service-worker.js */</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> build<span class="token punctuation">,</span> files <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$service-worker'</span><span class="token punctuation">;</span>
 
<span class="token comment">/* Create a unique cache name for this deployment
   update assets by altering CACHE_NAME           */</span>
<span class="token keyword">const</span> <span class="token constant">CACHE_NAME</span> <span class="token operator">=</span> <span class="token string">"cache-pwa-0.0.2"</span><span class="token punctuation">;</span>
 
<span class="token keyword">const</span> <span class="token constant">ASSETS</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token operator">...</span>build<span class="token punctuation">,</span> <span class="token comment">/* the app itself           */</span>
  <span class="token operator">...</span>files  <span class="token comment">/* everything in &#96;static&#96;   */</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 

<span class="token comment">/* INSTALL */</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'install'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"install"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* Create a new cache and add all files to it */</span>
  <span class="token comment">// self.skipWaiting();</span>

  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addFilesToCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">await</span> caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token constant">CACHE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> cache<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token constant">ASSETS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
 
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span><span class="token function">addFilesToCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/* ACTIVATE */</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'activate'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"activate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">/* Remove previous cached data from disk  */</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">deleteOldCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> <span class="token keyword">await</span> caches<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'cache-pwa-'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">!==</span> <span class="token constant">CACHE_NAME</span><span class="token punctuation">)</span> <span class="token keyword">await</span> caches<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span><span class="token function">deleteOldCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 

<span class="token comment">/* FETCH */</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token comment">/* ignore POST requests etc */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">.</span>method <span class="token operator">!==</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
 
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// const url = new URL(event.request.url);</span>
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">await</span> caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token constant">CACHE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">/* &#96;build&#96;/&#96;files&#96; can always be served from the cache */</span>
    <span class="token comment">// if (ASSETS.includes(url.pathname)) &#123;</span>
    <span class="token comment">//   return cache.match(event.request);</span>
    <span class="token comment">// &#125;</span>
 
    <span class="token comment">/* for everything else, try the network first, but
       fall back to the cache if we're offline          */</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,F;return g=new gs({props:{links:K[0]}}),{c(){d=s("div"),E=s("div"),is(g.$$.fragment),Q=u(),t=s("div"),x=s("h1"),X=c("PWA"),Y=u(),I=s("h2"),Z=c("Images"),nn=u(),r=s("ul"),T=s("li"),sn=c("512x512"),an=u(),S=s("li"),tn=c("192x192"),pn=u(),q=s("li"),en=c("safe area: 80% of image"),on=u(),H=s("li"),cn=c("maskable: 60% of image"),ln=u(),y=s("li"),un=c("place in "),M=s("code"),rn=c("static"),kn=c(" folder"),dn=u(),z=s("br"),mn=u(),$=s("h2"),fn=c("Manifst"),hn=u(),k=s("ul"),j=s("li"),vn=c("short_name or name"),gn=u(),O=s("li"),yn=c("icons - must include a 192px and a 512px icon"),_n=u(),P=s("li"),wn=c("start_url"),En=u(),R=s("li"),Cn=c("display: standalone, fullscreen, or minimal-ui"),Ln=u(),_=s("li"),An=c("place in "),W=s("code"),bn=c("static"),xn=c(" folder"),In=u(),C=s("pre"),Tn=u(),L=s("pre"),Sn=u(),V=s("br"),qn=u(),D=s("h2"),Hn=c("Service Worker"),Mn=u(),N=s("ul"),w=s("li"),$n=c("place in "),U=s("code"),jn=c("src"),On=c(" next to app.html"),Pn=u(),A=s("pre"),this.h()},l(h){d=a(h,"DIV",{class:!0});var b=e(d);E=a(b,"DIV",{class:!0});var Rn=e(E);rs(g.$$.fragment,Rn),Rn.forEach(p),Q=i(b),t=a(b,"DIV",{class:!0});var o=e(t);x=a(o,"H1",{});var Wn=e(x);X=l(Wn,"PWA"),Wn.forEach(p),Y=i(o),I=a(o,"H2",{});var Dn=e(I);Z=l(Dn,"Images"),Dn.forEach(p),nn=i(o),r=a(o,"UL",{});var m=e(r);T=a(m,"LI",{});var Nn=e(T);sn=l(Nn,"512x512"),Nn.forEach(p),an=i(m),S=a(m,"LI",{});var Un=e(S);tn=l(Un,"192x192"),Un.forEach(p),pn=i(m),q=a(m,"LI",{});var zn=e(q);en=l(zn,"safe area: 80% of image"),zn.forEach(p),on=i(m),H=a(m,"LI",{});var Vn=e(H);cn=l(Vn,"maskable: 60% of image"),Vn.forEach(p),ln=i(m),y=a(m,"LI",{});var B=e(y);un=l(B,"place in "),M=a(B,"CODE",{});var Fn=e(M);rn=l(Fn,"static"),Fn.forEach(p),kn=l(B," folder"),B.forEach(p),m.forEach(p),dn=i(o),z=a(o,"BR",{id:!0}),mn=i(o),$=a(o,"H2",{});var Bn=e($);fn=l(Bn,"Manifst"),Bn.forEach(p),hn=i(o),k=a(o,"UL",{});var f=e(k);j=a(f,"LI",{});var Gn=e(j);vn=l(Gn,"short_name or name"),Gn.forEach(p),gn=i(f),O=a(f,"LI",{});var Jn=e(O);yn=l(Jn,"icons - must include a 192px and a 512px icon"),Jn.forEach(p),_n=i(f),P=a(f,"LI",{});var Kn=e(P);wn=l(Kn,"start_url"),Kn.forEach(p),En=i(f),R=a(f,"LI",{});var Qn=e(R);Cn=l(Qn,"display: standalone, fullscreen, or minimal-ui"),Qn.forEach(p),Ln=i(f),_=a(f,"LI",{});var G=e(_);An=l(G,"place in "),W=a(G,"CODE",{});var Xn=e(W);bn=l(Xn,"static"),Xn.forEach(p),xn=l(G," folder"),G.forEach(p),f.forEach(p),In=i(o),C=a(o,"PRE",{class:!0});var ps=e(C);ps.forEach(p),Tn=i(o),L=a(o,"PRE",{class:!0});var es=e(L);es.forEach(p),Sn=i(o),V=a(o,"BR",{id:!0}),qn=i(o),D=a(o,"H2",{});var Yn=e(D);Hn=l(Yn,"Service Worker"),Yn.forEach(p),Mn=i(o),N=a(o,"UL",{});var Zn=e(N);w=a(Zn,"LI",{});var J=e(w);$n=l(J,"place in "),U=a(J,"CODE",{});var ns=e(U);jn=l(ns,"src"),ns.forEach(p),On=l(J," next to app.html"),J.forEach(p),Zn.forEach(p),Pn=i(o),A=a(o,"PRE",{class:!0});var os=e(A);os.forEach(p),o.forEach(p),b.forEach(p),this.h()},h(){v(E,"class","toc"),v(z,"id","manifest"),v(C,"class","language-html"),v(L,"class","language-json"),v(V,"id","worker"),v(A,"class","language-js"),v(t,"class","content"),v(d,"class","page")},m(h,b){ks(h,d,b),n(d,E),ds(g,E,null),n(d,Q),n(d,t),n(t,x),n(x,X),n(t,Y),n(t,I),n(I,Z),n(t,nn),n(t,r),n(r,T),n(T,sn),n(r,an),n(r,S),n(S,tn),n(r,pn),n(r,q),n(q,en),n(r,on),n(r,H),n(H,cn),n(r,ln),n(r,y),n(y,un),n(y,M),n(M,rn),n(y,kn),n(t,dn),n(t,z),n(t,mn),n(t,$),n($,fn),n(t,hn),n(t,k),n(k,j),n(j,vn),n(k,gn),n(k,O),n(O,yn),n(k,_n),n(k,P),n(P,wn),n(k,En),n(k,R),n(R,Cn),n(k,Ln),n(k,_),n(_,An),n(_,W),n(W,bn),n(_,xn),n(t,In),n(t,C),C.innerHTML=ss,n(t,Tn),n(t,L),L.innerHTML=as,n(t,Sn),n(t,V),n(t,qn),n(t,D),n(D,Hn),n(t,Mn),n(t,N),n(N,w),n(w,$n),n(w,U),n(U,jn),n(w,On),n(t,Pn),n(t,A),A.innerHTML=ts,F=!0},p:ms,i(h){F||(fs(g.$$.fragment,h),F=!0)},o(h){hs(g.$$.fragment,h),F=!1},d(h){h&&p(d),vs(g)}}}function _s(K){return[[{name:"Images",path:"#top"},{name:"Manifest",path:"#manifest"},{name:"Service Worker",path:"#worker"}]]}class Cs extends cs{constructor(d){super(),ls(this,d,_s,ys,us,{})}}export{Cs as default};
